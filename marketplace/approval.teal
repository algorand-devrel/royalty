#pragma version 6
txn NumAppArgs
int 0
==
bnz main_l6
txna ApplicationArgs 0
method "list(asset,application,uint64,uint64,appl)void"
==
bnz main_l5
txna ApplicationArgs 0
method "buy(asset,application,account,account,account,uint64,pay)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
int 0
getbyte
store 5
txna ApplicationArgs 2
int 0
getbyte
store 6
txna ApplicationArgs 3
int 0
getbyte
store 7
txna ApplicationArgs 4
int 0
getbyte
store 8
txna ApplicationArgs 5
int 0
getbyte
store 9
txna ApplicationArgs 6
btoi
store 10
txn GroupIndex
int 1
-
store 11
load 5
load 6
load 7
load 8
load 9
load 10
load 11
callsub buy_1
int 1
return
main_l5:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
int 0
getbyte
store 0
txna ApplicationArgs 2
int 0
getbyte
store 1
txna ApplicationArgs 3
btoi
store 2
txna ApplicationArgs 4
btoi
store 3
txn GroupIndex
int 1
-
store 4
load 0
load 1
load 2
load 3
load 4
callsub list_0
int 1
return
main_l6:
txn OnCompletion
int NoOp
==
bnz main_l16
txn OnCompletion
int OptIn
==
bnz main_l15
txn OnCompletion
int CloseOut
==
bnz main_l14
txn OnCompletion
int UpdateApplication
==
bnz main_l13
txn OnCompletion
int DeleteApplication
==
bnz main_l12
err
main_l12:
txn Sender
global CreatorAddress
==
return
main_l13:
txn Sender
global CreatorAddress
==
return
main_l14:
int 1
return
main_l15:
int 1
return
main_l16:
txn ApplicationID
int 0
==
assert
int 1
return

// list
list_0:
store 16
store 15
store 14
store 13
store 12
txn Sender
load 12
txnas Assets
asset_holding_get AssetBalance
store 18
store 17
load 12
txnas Assets
asset_params_get AssetFreeze
store 20
store 19
load 12
txnas Assets
asset_params_get AssetClawback
store 22
store 21
load 13
txnas Applications
app_params_get AppAddress
store 24
store 23
txn Sender
load 13
txnas Applications
load 12
txnas Assets
itob
app_local_get_ex
store 26
store 25
byte "app"
app_global_get
int 0
==
assert
load 16
gtxns ApplicationID
load 13
txnas Applications
==
assert
load 17
int 0
>
assert
load 19
load 23
==
assert
load 21
load 23
==
assert
load 25
callsub offeredauth_3
global CurrentApplicationAddress
==
assert
load 25
callsub offeredamount_2
load 14
>=
assert
byte "app"
load 13
txnas Applications
app_global_put
byte "asset"
load 12
txnas Assets
app_global_put
byte "amount"
load 14
app_global_put
byte "price"
load 15
app_global_put
byte "account"
txn Sender
app_global_put
retsub

// buy
buy_1:
store 33
store 32
store 31
store 30
store 29
store 28
store 27
load 30
txnas Accounts
load 28
txnas Applications
load 27
txnas Assets
itob
app_local_get_ex
store 35
store 34
load 35
assert
load 30
txnas Accounts
byte "account"
app_global_get
==
assert
load 28
txnas Applications
byte "app"
app_global_get
==
assert
load 27
txnas Assets
byte "asset"
app_global_get
==
assert
load 33
gtxns Amount
byte "price"
app_global_get
>=
assert
load 33
gtxns Receiver
global CurrentApplicationAddress
==
assert
load 32
byte "amount"
app_global_get
<=
assert
load 33
gtxns Amount
store 36
itxn_begin
int pay
itxn_field TypeEnum
load 33
gtxns Amount
itxn_field Amount
load 29
txnas Accounts
itxn_field Receiver
itxn_next
int appl
itxn_field TypeEnum
load 28
txnas Applications
itxn_field ApplicationID
load 30
txnas Accounts
itxn_field Accounts
txn Sender
itxn_field Accounts
load 31
txnas Accounts
itxn_field Accounts
load 27
txnas Assets
itxn_field Assets
method "transfer(asset,uint64,account,account,account,pay,uint64)void"
itxn_field ApplicationArgs
byte 0x00
itxn_field ApplicationArgs
load 32
itob
itxn_field ApplicationArgs
byte 0x01
itxn_field ApplicationArgs
byte 0x02
itxn_field ApplicationArgs
byte 0x03
itxn_field ApplicationArgs
load 36
itob
itxn_field ApplicationArgs
itxn_submit
byte "asset"
app_global_del
byte "amount"
app_global_del
byte "app"
app_global_del
byte "account"
app_global_del
byte "price"
app_global_del
retsub

// offered_amount
offeredamount_2:
int 32
extract_uint64
retsub

// offered_auth
offeredauth_3:
extract 0 32
retsub