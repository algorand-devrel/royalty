#pragma version 6
txn NumAppArgs
int 0
==
bnz main_l16
txna ApplicationArgs 0
method "set_administrator(address)void"
==
bnz main_l15
txna ApplicationArgs 0
method "set_policy(uint64,address)void"
==
bnz main_l14
txna ApplicationArgs 0
method "set_asset(asset,bool)void"
==
bnz main_l13
txna ApplicationArgs 0
method "royalty_free_move(asset,uint64,account,account,uint64)void"
==
bnz main_l12
txna ApplicationArgs 0
method "get_offer(uint64,account)(address,uint64)"
==
bnz main_l11
txna ApplicationArgs 0
method "get_policy()(address,uint64)"
==
bnz main_l10
txna ApplicationArgs 0
method "get_administrator()address"
==
bnz main_l9
err
main_l9:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub getadministrator_12
store 19
byte 0x151f7c75
load 19
concat
log
int 1
return
main_l10:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub getpolicy_11
store 16
byte 0x151f7c75
load 16
concat
log
int 1
return
main_l11:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 9
txna ApplicationArgs 2
int 0
getbyte
store 10
load 9
load 10
callsub getoffer_10
store 11
byte 0x151f7c75
load 11
concat
log
int 1
return
main_l12:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
int 0
getbyte
store 4
txna ApplicationArgs 2
btoi
store 5
txna ApplicationArgs 3
int 0
getbyte
store 6
txna ApplicationArgs 4
int 0
getbyte
store 7
txna ApplicationArgs 5
btoi
store 8
load 4
load 5
load 6
load 7
load 8
callsub royaltyfreemove_9
int 1
return
main_l13:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
int 0
getbyte
store 2
txna ApplicationArgs 2
int 0
int 8
*
getbit
store 3
load 2
load 3
callsub setasset_8
int 1
return
main_l14:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 0
txna ApplicationArgs 2
store 1
load 0
load 1
callsub setpolicy_7
int 1
return
main_l15:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
txna ApplicationArgs 1
callsub setadministrator_6
int 1
return
main_l16:
txn OnCompletion
int NoOp
==
bnz main_l26
txn OnCompletion
int OptIn
==
bnz main_l25
txn OnCompletion
int CloseOut
==
bnz main_l24
txn OnCompletion
int UpdateApplication
==
bnz main_l23
txn OnCompletion
int DeleteApplication
==
bnz main_l22
err
main_l22:
txn Sender
callsub getadmin_0
==
return
main_l23:
txn Sender
callsub getadmin_0
==
return
main_l24:
int 1
return
main_l25:
int 1
return
main_l26:
txn ApplicationID
int 0
==
assert
txn Sender
callsub putadmin_1
int 1
return

// get_admin
getadmin_0:
int 0
byte "administrator"
app_global_get_ex
store 21
store 20
load 21
bnz getadmin_0_l2
global CreatorAddress
b getadmin_0_l3
getadmin_0_l2:
load 20
getadmin_0_l3:
retsub

// put_admin
putadmin_1:
store 22
byte "administrator"
load 22
app_global_put
retsub

// royalty_receiver
royaltyreceiver_2:
byte "royalty_receiver"
app_global_get
retsub

// royalty_basis
royaltybasis_3:
byte "royalty_basis"
app_global_get
retsub

// offered_amount
offeredamount_4:
int 32
extract_uint64
retsub

// offered_auth
offeredauth_5:
extract 0 32
retsub

// set_administrator
setadministrator_6:
store 23
txn Sender
callsub getadmin_0
==
assert
load 23
callsub putadmin_1
retsub

// set_policy
setpolicy_7:
store 25
store 24
txn Sender
callsub getadmin_0
==
assert
int 0
byte "royalty_basis"
app_global_get_ex
store 27
store 26
int 0
byte "royalty_receiver"
app_global_get_ex
store 29
store 28
load 27
!
assert
load 29
!
assert
load 24
int 10000
<=
assert
byte "royalty_basis"
load 24
app_global_put
byte "royalty_receiver"
load 25
app_global_put
retsub

// set_asset
setasset_8:
store 31
store 30
txn Sender
callsub getadmin_0
==
assert
global CurrentApplicationAddress
load 30
txnas Assets
asset_holding_get AssetBalance
store 33
store 32
load 30
txnas Assets
asset_params_get AssetCreator
store 35
store 34
load 31
load 33
!
&&
bnz setasset_8_l3
load 31
!
load 33
&&
bz setasset_8_l4
itxn_begin
int axfer
itxn_field TypeEnum
load 30
txnas Assets
itxn_field XferAsset
int 0
itxn_field AssetAmount
load 34
itxn_field AssetCloseTo
load 34
itxn_field AssetReceiver
itxn_submit
b setasset_8_l4
setasset_8_l3:
itxn_begin
int axfer
itxn_field TypeEnum
load 30
txnas Assets
itxn_field XferAsset
int 0
itxn_field AssetAmount
global CurrentApplicationAddress
itxn_field AssetReceiver
itxn_submit
setasset_8_l4:
retsub

// royalty_free_move
royaltyfreemove_9:
store 40
store 39
store 38
store 37
store 36
load 38
txnas Accounts
load 36
txnas Assets
itob
app_local_get
callsub offeredamount_4
store 41
load 38
txnas Accounts
load 36
txnas Assets
itob
app_local_get
callsub offeredauth_5
store 42
load 41
load 40
==
assert
load 42
txn Sender
==
assert
load 42
callsub getadmin_0
==
assert
load 41
load 37
>=
assert
load 38
txnas Accounts
load 36
txnas Assets
itob
byte ""
int 0
txn Sender
load 40
callsub updateoffered_14
load 36
txnas Assets
load 38
txnas Accounts
load 39
txnas Accounts
load 37
callsub moveasset_13
retsub

// get_offer
getoffer_10:
store 13
store 12
load 13
txnas Accounts
int 0
load 12
itob
app_local_get_ex
store 15
store 14
load 15
assert
load 14
retsub

// get_policy
getpolicy_11:
callsub royaltyreceiver_2
store 17
callsub royaltybasis_3
store 18
load 17
load 18
itob
concat
retsub

// get_administrator
getadministrator_12:
callsub getadmin_0
retsub

// move_asset
moveasset_13:
store 46
store 45
store 44
store 43
itxn_begin
int axfer
itxn_field TypeEnum
load 43
itxn_field XferAsset
load 46
itxn_field AssetAmount
load 44
itxn_field AssetSender
load 45
itxn_field AssetReceiver
itxn_submit
retsub

// update_offered
updateoffered_14:
store 52
store 51
store 50
store 49
store 48
store 47
load 47
int 0
load 48
app_local_get_ex
store 54
store 53
load 54
bnz updateoffered_14_l5
load 52
int 0
==
load 51
global ZeroAddress
==
&&
assert
updateoffered_14_l2:
load 50
int 0
>
bnz updateoffered_14_l4
load 47
load 48
app_local_del
b updateoffered_14_l6
updateoffered_14_l4:
load 47
load 48
load 49
load 50
itob
concat
app_local_put
b updateoffered_14_l6
updateoffered_14_l5:
load 53
callsub offeredamount_4
load 52
==
load 53
callsub offeredauth_5
load 51
==
&&
assert
b updateoffered_14_l2
updateoffered_14_l6:
retsub